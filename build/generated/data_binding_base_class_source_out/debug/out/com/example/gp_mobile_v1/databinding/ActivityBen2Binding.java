// Generated by view binder compiler. Do not edit!
package com.example.gp_mobile_v1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gp_mobile_v1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBen2Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnVampireBack;

  @NonNull
  public final Button btnVampireNext;

  @NonNull
  public final ImageButton ibCross;

  @NonNull
  public final ImageButton ibGun;

  @NonNull
  public final ImageButton ibSword;

  @NonNull
  public final ImageView ivVampire;

  @NonNull
  public final LinearLayout llBtn;

  @NonNull
  public final LinearLayout llWeapons;

  private ActivityBen2Binding(@NonNull RelativeLayout rootView, @NonNull Button btnVampireBack,
      @NonNull Button btnVampireNext, @NonNull ImageButton ibCross, @NonNull ImageButton ibGun,
      @NonNull ImageButton ibSword, @NonNull ImageView ivVampire, @NonNull LinearLayout llBtn,
      @NonNull LinearLayout llWeapons) {
    this.rootView = rootView;
    this.btnVampireBack = btnVampireBack;
    this.btnVampireNext = btnVampireNext;
    this.ibCross = ibCross;
    this.ibGun = ibGun;
    this.ibSword = ibSword;
    this.ivVampire = ivVampire;
    this.llBtn = llBtn;
    this.llWeapons = llWeapons;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBen2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBen2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ben2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBen2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_vampireBack;
      Button btnVampireBack = ViewBindings.findChildViewById(rootView, id);
      if (btnVampireBack == null) {
        break missingId;
      }

      id = R.id.btn_vampireNext;
      Button btnVampireNext = ViewBindings.findChildViewById(rootView, id);
      if (btnVampireNext == null) {
        break missingId;
      }

      id = R.id.ib_cross;
      ImageButton ibCross = ViewBindings.findChildViewById(rootView, id);
      if (ibCross == null) {
        break missingId;
      }

      id = R.id.ib_gun;
      ImageButton ibGun = ViewBindings.findChildViewById(rootView, id);
      if (ibGun == null) {
        break missingId;
      }

      id = R.id.ib_sword;
      ImageButton ibSword = ViewBindings.findChildViewById(rootView, id);
      if (ibSword == null) {
        break missingId;
      }

      id = R.id.iv_vampire;
      ImageView ivVampire = ViewBindings.findChildViewById(rootView, id);
      if (ivVampire == null) {
        break missingId;
      }

      id = R.id.ll_btn;
      LinearLayout llBtn = ViewBindings.findChildViewById(rootView, id);
      if (llBtn == null) {
        break missingId;
      }

      id = R.id.ll_weapons;
      LinearLayout llWeapons = ViewBindings.findChildViewById(rootView, id);
      if (llWeapons == null) {
        break missingId;
      }

      return new ActivityBen2Binding((RelativeLayout) rootView, btnVampireBack, btnVampireNext,
          ibCross, ibGun, ibSword, ivVampire, llBtn, llWeapons);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
