// Generated by view binder compiler. Do not edit!
package com.example.gp_mobile_v1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gp_mobile_v1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnBenGameTNT;

  @NonNull
  public final Button btnBenGameVampire;

  @NonNull
  public final Button btnGame1;

  @NonNull
  public final Button btnGame2;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnMole;

  @NonNull
  public final Button btnOscar1;

  @NonNull
  public final Button btnOscar2;

  @NonNull
  public final TextView player1Score;

  @NonNull
  public final TextView player2Score;

  @NonNull
  public final LinearLayout scoreboard;

  @NonNull
  public final TextView textName;

  private ActivityHomeBinding(@NonNull RelativeLayout rootView, @NonNull Button btnBenGameTNT,
      @NonNull Button btnBenGameVampire, @NonNull Button btnGame1, @NonNull Button btnGame2,
      @NonNull Button btnLogout, @NonNull Button btnMole, @NonNull Button btnOscar1,
      @NonNull Button btnOscar2, @NonNull TextView player1Score, @NonNull TextView player2Score,
      @NonNull LinearLayout scoreboard, @NonNull TextView textName) {
    this.rootView = rootView;
    this.btnBenGameTNT = btnBenGameTNT;
    this.btnBenGameVampire = btnBenGameVampire;
    this.btnGame1 = btnGame1;
    this.btnGame2 = btnGame2;
    this.btnLogout = btnLogout;
    this.btnMole = btnMole;
    this.btnOscar1 = btnOscar1;
    this.btnOscar2 = btnOscar2;
    this.player1Score = player1Score;
    this.player2Score = player2Score;
    this.scoreboard = scoreboard;
    this.textName = textName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_benGameTNT;
      Button btnBenGameTNT = ViewBindings.findChildViewById(rootView, id);
      if (btnBenGameTNT == null) {
        break missingId;
      }

      id = R.id.btn_benGameVampire;
      Button btnBenGameVampire = ViewBindings.findChildViewById(rootView, id);
      if (btnBenGameVampire == null) {
        break missingId;
      }

      id = R.id.btnGame1;
      Button btnGame1 = ViewBindings.findChildViewById(rootView, id);
      if (btnGame1 == null) {
        break missingId;
      }

      id = R.id.btnGame2;
      Button btnGame2 = ViewBindings.findChildViewById(rootView, id);
      if (btnGame2 == null) {
        break missingId;
      }

      id = R.id.btn_logout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnMole;
      Button btnMole = ViewBindings.findChildViewById(rootView, id);
      if (btnMole == null) {
        break missingId;
      }

      id = R.id.btn_oscar1;
      Button btnOscar1 = ViewBindings.findChildViewById(rootView, id);
      if (btnOscar1 == null) {
        break missingId;
      }

      id = R.id.btn_oscar2;
      Button btnOscar2 = ViewBindings.findChildViewById(rootView, id);
      if (btnOscar2 == null) {
        break missingId;
      }

      id = R.id.player1_score;
      TextView player1Score = ViewBindings.findChildViewById(rootView, id);
      if (player1Score == null) {
        break missingId;
      }

      id = R.id.player2_score;
      TextView player2Score = ViewBindings.findChildViewById(rootView, id);
      if (player2Score == null) {
        break missingId;
      }

      id = R.id.scoreboard;
      LinearLayout scoreboard = ViewBindings.findChildViewById(rootView, id);
      if (scoreboard == null) {
        break missingId;
      }

      id = R.id.text_name;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      return new ActivityHomeBinding((RelativeLayout) rootView, btnBenGameTNT, btnBenGameVampire,
          btnGame1, btnGame2, btnLogout, btnMole, btnOscar1, btnOscar2, player1Score, player2Score,
          scoreboard, textName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
